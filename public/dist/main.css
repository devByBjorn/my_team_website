@import url(https://fonts.googleapis.com/css2?family=Livvic:wght@600;700&display=swap);
@import url(https://fonts.googleapis.com/css2?family=Livvic:wght@600;700&display=swap);
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

* {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  background: #014E56;
  box-sizing: border-box;
  color: #fff;
  font-family: "Livvic", sans-serif;
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 2.5rem; }

a {
  text-decoration: none;
  color: #fff; }

.stand-out-word {
  color: #f67e7e; }

.stand-out-word-2 {
  color: #79c8c7; }

.block {
  display: block; }

.flex-column {
  flex-direction: column; }

.btn {
  background: transparent;
  border: 2px solid;
  border-radius: 25px;
  display: inline-block;
  padding: 1rem 3rem;
  transition: all .2 ease-in-out;
  white-space: nowrap; }
  .btn:hover {
    cursor: pointer; }

.btn-primary-dark {
  background: #fff;
  color: #014E56; }
  .btn-primary-dark:hover {
    background: #014E56;
    color: #fff; }

.btn-primary-light {
  background: #014E56;
  color: #fff; }
  .btn-primary-light:hover {
    background: #fff;
    color: #014E56; }

.btn-secondary {
  background: #fff; }
  .btn-secondary:hover {
    background: #79c8c7;
    color: #014E56; }

.xl-heading {
  font-size: 10rem;
  font-weight: 700;
  line-height: 10rem; }

.large-heading {
  font-size: 6.4rem;
  font-weight: 700;
  line-height: 5.6rem; }

.medium-heading {
  font-size: 4.8rem;
  font-weight: 700;
  line-height: 4.8rem; }

.small-heading {
  font-size: 1.8rem;
  font-weight: 700;
  line-height: 2.8rem; }

.logo {
  padding-right: 2rem; }

.header {
  display: flex;
  align-items: baseline;
  padding: 2rem 0;
  justify-content: space-between; }

.logo-nav {
  display: inherit;
  align-items: baseline; }

.nav-item {
  padding: 0 2rem;
  transition: color .2s ease-in-out; }
  .nav-item:hover {
    color: #f67e7e; }

.content-container {
  margin: 0 auto;
  max-width: 90vw;
  width: 115rem; }

.row-section {
  display: flex; }

.column-section {
  display: flex;
  flex-direction: column; }

.home-top-content {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  padding-bottom: 25rem;
  padding-top: 5rem; }
  .home-top-content .heading {
    flex: 1;
    margin-bottom: -.75rem;
    margin-right: 2rem; }
  .home-top-content .paragraph {
    flex: 1;
    justify-self: right;
    font-size: 1.8rem;
    line-height: 2.8rem;
    max-width: 45rem; }

.home-middle-section {
  background: #012f34; }

.home-middle-content {
  display: flex;
  justify-content: space-between;
  padding-top: 20rem;
  padding-bottom: 10rem; }
  .home-middle-content .heading {
    flex: 1; }
  .home-middle-content .pitches {
    flex: 1; }

.pitch-item {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 2rem; }
  .pitch-item .icon-container {
    align-self: flex-start;
    max-width: 5rem;
    min-width: 5rem; }
  .pitch-item .icon {
    width: 100%;
    height: auto; }
  .pitch-item .heading {
    margin-bottom: 1rem; }
  .pitch-item .text {
    margin-bottom: 1rem;
    margin-left: 2rem;
    max-width: 45rem; }

.home-bottom-content {
  display: flex;
  flex-direction: column;
  padding-top: 10rem;
  padding-bottom: 10rem; }
  .home-bottom-content .heading {
    padding-bottom: 5rem;
    text-align: center; }
  .home-bottom-content .testimonials-container {
    display: flex;
    justify-content: space-around;
    text-align: center; }
  .home-bottom-content .testimonial-item {
    padding: 0 2rem; }
  .home-bottom-content .icon-qoutes {
    margin-bottom: -2.5rem; }
  .home-bottom-content .name {
    font-size: 1.8rem;
    padding-top: 2rem; }
  .home-bottom-content .role {
    font-size: 1.2rem; }
  .home-bottom-content .portrait-div {
    border: 2px solid #fff;
    border-radius: 50%;
    height: 5rem;
    margin: 1rem auto;
    width: 5rem; }
  .home-bottom-content .portrait-img {
    width: 100%;
    height: auto; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/